// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: finance/streamer.proto

package finance

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 直播间数据
type LiveRoomItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                       // 主键Id
	UserId        int32  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`               // 消费者用户id
	Category      int32  `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`           // 类别
	CreateTime    string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`        // 创建时间
	Total         int32  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`                 // 消费总数量
	IncomeRatio   int32  `protobuf:"varint,6,opt,name=incomeRatio,proto3" json:"incomeRatio,omitempty"`     // 主播抽成比例
	IncomeDiamond int32  `protobuf:"varint,7,opt,name=incomeDiamond,proto3" json:"incomeDiamond,omitempty"` // 主播收入
}

func (x *LiveRoomItem) Reset() {
	*x = LiveRoomItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_streamer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomItem) ProtoMessage() {}

func (x *LiveRoomItem) ProtoReflect() protoreflect.Message {
	mi := &file_finance_streamer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomItem.ProtoReflect.Descriptor instead.
func (*LiveRoomItem) Descriptor() ([]byte, []int) {
	return file_finance_streamer_proto_rawDescGZIP(), []int{0}
}

func (x *LiveRoomItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LiveRoomItem) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LiveRoomItem) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *LiveRoomItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *LiveRoomItem) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LiveRoomItem) GetIncomeRatio() int32 {
	if x != nil {
		return x.IncomeRatio
	}
	return 0
}

func (x *LiveRoomItem) GetIncomeDiamond() int32 {
	if x != nil {
		return x.IncomeDiamond
	}
	return 0
}

// 家族抽成数据
type FamilyCutItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   // 主键Id
	Category    int32  `protobuf:"varint,2,opt,name=category,proto3" json:"category,omitempty"`       // 类别
	UserId      int32  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`           // 消费者用户id (抽取时是主播的id，被抽取时是家族长的id)
	CreateTime  string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`    // 创建时间
	Total       int32  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`             // 消费总数量
	FamilyRatio int32  `protobuf:"varint,7,opt,name=familyRatio,proto3" json:"familyRatio,omitempty"` // 主播抽成比例
	CutDiamond  int32  `protobuf:"varint,8,opt,name=cutDiamond,proto3" json:"cutDiamond,omitempty"`   // 抽取金额
}

func (x *FamilyCutItem) Reset() {
	*x = FamilyCutItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_streamer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FamilyCutItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyCutItem) ProtoMessage() {}

func (x *FamilyCutItem) ProtoReflect() protoreflect.Message {
	mi := &file_finance_streamer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyCutItem.ProtoReflect.Descriptor instead.
func (*FamilyCutItem) Descriptor() ([]byte, []int) {
	return file_finance_streamer_proto_rawDescGZIP(), []int{1}
}

func (x *FamilyCutItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FamilyCutItem) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *FamilyCutItem) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FamilyCutItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *FamilyCutItem) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FamilyCutItem) GetFamilyRatio() int32 {
	if x != nil {
		return x.FamilyRatio
	}
	return 0
}

func (x *FamilyCutItem) GetCutDiamond() int32 {
	if x != nil {
		return x.CutDiamond
	}
	return 0
}

// 收入详情查询
type StreamerIncomeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tab        int32  `protobuf:"varint,1,opt,name=tab,proto3" json:"tab,omitempty"`               // 1-all, 2-live room, 3-family
	Date       string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`              // 日期
	PageNumber int32  `protobuf:"varint,3,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"` // 页码
	PageSize   int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`     // 页大小
}

func (x *StreamerIncomeReq) Reset() {
	*x = StreamerIncomeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_streamer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamerIncomeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamerIncomeReq) ProtoMessage() {}

func (x *StreamerIncomeReq) ProtoReflect() protoreflect.Message {
	mi := &file_finance_streamer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamerIncomeReq.ProtoReflect.Descriptor instead.
func (*StreamerIncomeReq) Descriptor() ([]byte, []int) {
	return file_finance_streamer_proto_rawDescGZIP(), []int{2}
}

func (x *StreamerIncomeReq) GetTab() int32 {
	if x != nil {
		return x.Tab
	}
	return 0
}

func (x *StreamerIncomeReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *StreamerIncomeReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *StreamerIncomeReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 收入详情查询
type StreamerIncomeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tab           int32            `protobuf:"varint,1,opt,name=tab,proto3" json:"tab,omitempty"`                    // 1-all, 2-live room, 3-family
	FansDiamond   int32            `protobuf:"varint,2,opt,name=fansDiamond,proto3" json:"fansDiamond,omitempty"`    // 粉丝贡献的钻石数量 (当在全部页签上时显示)
	ProfitShare   int32            `protobuf:"varint,3,opt,name=profitShare,proto3" json:"profitShare,omitempty"`    // 分成 (当在全部页签上时显示)
	PageNum       int32            `protobuf:"varint,4,opt,name=pageNum,proto3" json:"pageNum,omitempty"`            // 页码
	QueryTime     string           `protobuf:"bytes,5,opt,name=queryTime,proto3" json:"queryTime,omitempty"`         // 时间
	LiveRoomList  []*LiveRoomItem  `protobuf:"bytes,6,rep,name=liveRoomList,proto3" json:"liveRoomList,omitempty"`   // 直播间数据
	FamilyCutList []*FamilyCutItem `protobuf:"bytes,7,rep,name=familyCutList,proto3" json:"familyCutList,omitempty"` // 家族抽成数据
}

func (x *StreamerIncomeResp) Reset() {
	*x = StreamerIncomeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_streamer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamerIncomeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamerIncomeResp) ProtoMessage() {}

func (x *StreamerIncomeResp) ProtoReflect() protoreflect.Message {
	mi := &file_finance_streamer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamerIncomeResp.ProtoReflect.Descriptor instead.
func (*StreamerIncomeResp) Descriptor() ([]byte, []int) {
	return file_finance_streamer_proto_rawDescGZIP(), []int{3}
}

func (x *StreamerIncomeResp) GetTab() int32 {
	if x != nil {
		return x.Tab
	}
	return 0
}

func (x *StreamerIncomeResp) GetFansDiamond() int32 {
	if x != nil {
		return x.FansDiamond
	}
	return 0
}

func (x *StreamerIncomeResp) GetProfitShare() int32 {
	if x != nil {
		return x.ProfitShare
	}
	return 0
}

func (x *StreamerIncomeResp) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *StreamerIncomeResp) GetQueryTime() string {
	if x != nil {
		return x.QueryTime
	}
	return ""
}

func (x *StreamerIncomeResp) GetLiveRoomList() []*LiveRoomItem {
	if x != nil {
		return x.LiveRoomList
	}
	return nil
}

func (x *StreamerIncomeResp) GetFamilyCutList() []*FamilyCutItem {
	if x != nil {
		return x.FamilyCutList
	}
	return nil
}

// 结算详情查询
type StreamerSettleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tab        int32  `protobuf:"varint,1,opt,name=tab,proto3" json:"tab,omitempty"`               // 1-all, 2-live room, 3-family
	Date       string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`              // 日期
	PageNumber int32  `protobuf:"varint,3,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"` // 页码
	PageSize   int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`     // 页大小
}

func (x *StreamerSettleReq) Reset() {
	*x = StreamerSettleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_streamer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamerSettleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamerSettleReq) ProtoMessage() {}

func (x *StreamerSettleReq) ProtoReflect() protoreflect.Message {
	mi := &file_finance_streamer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamerSettleReq.ProtoReflect.Descriptor instead.
func (*StreamerSettleReq) Descriptor() ([]byte, []int) {
	return file_finance_streamer_proto_rawDescGZIP(), []int{4}
}

func (x *StreamerSettleReq) GetTab() int32 {
	if x != nil {
		return x.Tab
	}
	return 0
}

func (x *StreamerSettleReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *StreamerSettleReq) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *StreamerSettleReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 结算详情查询
type StreamerSettleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tab           int32            `protobuf:"varint,1,opt,name=tab,proto3" json:"tab,omitempty"`                    // 1-all, 2-live room, 3-family
	FansDiamond   int32            `protobuf:"varint,2,opt,name=fansDiamond,proto3" json:"fansDiamond,omitempty"`    // 粉丝贡献的钻石数量 (当在全部页签上时显示)
	ProfitShare   int32            `protobuf:"varint,3,opt,name=profitShare,proto3" json:"profitShare,omitempty"`    // 分成 (当在全部页签上时显示)
	PageNum       int32            `protobuf:"varint,4,opt,name=pageNum,proto3" json:"pageNum,omitempty"`            // 页码
	QueryTime     string           `protobuf:"bytes,5,opt,name=queryTime,proto3" json:"queryTime,omitempty"`         // 时间
	LiveRoomList  []*LiveRoomItem  `protobuf:"bytes,6,rep,name=liveRoomList,proto3" json:"liveRoomList,omitempty"`   // 直播间数据
	FamilyCutList []*FamilyCutItem `protobuf:"bytes,7,rep,name=familyCutList,proto3" json:"familyCutList,omitempty"` // 家族抽成数据
}

func (x *StreamerSettleResp) Reset() {
	*x = StreamerSettleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_streamer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamerSettleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamerSettleResp) ProtoMessage() {}

func (x *StreamerSettleResp) ProtoReflect() protoreflect.Message {
	mi := &file_finance_streamer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamerSettleResp.ProtoReflect.Descriptor instead.
func (*StreamerSettleResp) Descriptor() ([]byte, []int) {
	return file_finance_streamer_proto_rawDescGZIP(), []int{5}
}

func (x *StreamerSettleResp) GetTab() int32 {
	if x != nil {
		return x.Tab
	}
	return 0
}

func (x *StreamerSettleResp) GetFansDiamond() int32 {
	if x != nil {
		return x.FansDiamond
	}
	return 0
}

func (x *StreamerSettleResp) GetProfitShare() int32 {
	if x != nil {
		return x.ProfitShare
	}
	return 0
}

func (x *StreamerSettleResp) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *StreamerSettleResp) GetQueryTime() string {
	if x != nil {
		return x.QueryTime
	}
	return ""
}

func (x *StreamerSettleResp) GetLiveRoomList() []*LiveRoomItem {
	if x != nil {
		return x.LiveRoomList
	}
	return nil
}

func (x *StreamerSettleResp) GetFamilyCutList() []*FamilyCutItem {
	if x != nil {
		return x.FamilyCutList
	}
	return nil
}

var File_finance_streamer_proto protoreflect.FileDescriptor

var file_finance_streamer_proto_rawDesc = []byte{
	0x0a, 0x16, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd0, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x6f,
	0x6e, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x0d, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x75, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x74, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x74, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x22, 0x75, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x62,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x61, 0x6e, 0x73, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x61, 0x6e, 0x73, 0x44, 0x69, 0x61, 0x6d, 0x6f,
	0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c,
	0x6c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43,
	0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x75, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0d, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x75, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x75, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61,
	0x62, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x61, 0x6e, 0x73, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x61, 0x6e, 0x73, 0x44, 0x69, 0x61, 0x6d,
	0x6f, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x0c, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x43, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x75, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0d, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x75, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x1e, 0x5a, 0x1c, 0x6c, 0x69, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_finance_streamer_proto_rawDescOnce sync.Once
	file_finance_streamer_proto_rawDescData = file_finance_streamer_proto_rawDesc
)

func file_finance_streamer_proto_rawDescGZIP() []byte {
	file_finance_streamer_proto_rawDescOnce.Do(func() {
		file_finance_streamer_proto_rawDescData = protoimpl.X.CompressGZIP(file_finance_streamer_proto_rawDescData)
	})
	return file_finance_streamer_proto_rawDescData
}

var file_finance_streamer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_finance_streamer_proto_goTypes = []any{
	(*LiveRoomItem)(nil),       // 0: proto.LiveRoomItem
	(*FamilyCutItem)(nil),      // 1: proto.FamilyCutItem
	(*StreamerIncomeReq)(nil),  // 2: proto.StreamerIncomeReq
	(*StreamerIncomeResp)(nil), // 3: proto.StreamerIncomeResp
	(*StreamerSettleReq)(nil),  // 4: proto.StreamerSettleReq
	(*StreamerSettleResp)(nil), // 5: proto.StreamerSettleResp
}
var file_finance_streamer_proto_depIdxs = []int32{
	0, // 0: proto.StreamerIncomeResp.liveRoomList:type_name -> proto.LiveRoomItem
	1, // 1: proto.StreamerIncomeResp.familyCutList:type_name -> proto.FamilyCutItem
	0, // 2: proto.StreamerSettleResp.liveRoomList:type_name -> proto.LiveRoomItem
	1, // 3: proto.StreamerSettleResp.familyCutList:type_name -> proto.FamilyCutItem
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_finance_streamer_proto_init() }
func file_finance_streamer_proto_init() {
	if File_finance_streamer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_finance_streamer_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LiveRoomItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_streamer_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FamilyCutItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_streamer_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*StreamerIncomeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_streamer_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*StreamerIncomeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_streamer_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*StreamerSettleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_streamer_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StreamerSettleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_finance_streamer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_finance_streamer_proto_goTypes,
		DependencyIndexes: file_finance_streamer_proto_depIdxs,
		MessageInfos:      file_finance_streamer_proto_msgTypes,
	}.Build()
	File_finance_streamer_proto = out.File
	file_finance_streamer_proto_rawDesc = nil
	file_finance_streamer_proto_goTypes = nil
	file_finance_streamer_proto_depIdxs = nil
}
